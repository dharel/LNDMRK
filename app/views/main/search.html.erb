<div ng-controller='SearchController' ng-init='init()' ng-class='{"hebrew": localizationSrv.locale === "he"}'>
  <header>
    <div class='header-wrap dashboard'>
      <ul class='left-side'>
        <li><a href='#/'><%= image_tag('lndmrk_logo.png',class: 'header-logo', width: '133', alt: 'LNDMRK') %></a></li> 
        <li><a class='link-1' translate>how_it_works</a></li>
        <li><a class='link-2' translate>about</a></li>
        <li><a class='link-3' translate>learning</a></li>
      </ul>
      <ul class='right-side'>
        <li><a class='notification'></a></li>
        <li>
          <a class='user-image'></a>
        </li>
        <li><a class='user' href='#'>USER@LNDMRK.COM</a></li>
        <li class='logout'><a class='link' translate>logout</a></li>
      </ul>
    </div>
  </header>
  <section class="main-wrapper">
    <div class="data-container">
      <div class="left-panel-wrapper">
        <div class="search-top-panel-container">
          <div class="top-panel-search-properties">
            <div class="top-panel-search-properties-container">
              <div class="top-panel-section-title search">SEARCH PROPERTIES</div>
              <div class="properties-buttons-wrapper">
                <div class="properties-button left" ng-class="{'properties-button-left-selected' : investment_type_buttons[0].checked}" ng-click="investment_type_buttons[0].checked = !investment_type_buttons[0].checked ; filterResults()">INCOME</div>
                <div class="properties-button middle" ng-class="{'properties-button-middle-selected' : investment_type_buttons[1].checked}" ng-click="investment_type_buttons[1].checked = !investment_type_buttons[1].checked ; filterResults()">GROWTH</div>
                <div class="properties-button right" ng-class="{'properties-button-right-selected' : investment_type_buttons[2].checked}" ng-click="investment_type_buttons[2].checked = !investment_type_buttons[2].checked ; filterResults()">INCOME & GROWTH</div>
              </div>
              <!-- <div id="locationField" class="locationField">
                <input class="autocomplete" id="autocomplete" placeholder="Enter your address"
                       type="text" ng-model='address_autocomplete' ng-change="deleteZipErrorMessage()"
                       ng-class="{'error': invitationDataManagerService.zip_code_error || invitationDataManagerService.address_error}"></input>

              </div> -->
              <input id="pac-input" class="controls" type="text"
        placeholder="Enter a location">

            </div>
          </div>
          <div class="separate-line"></div>
          <div class="top-panel-market-type">
            <div class="top-panel-market-type-container">
              <div class="top-panel-section-title market">MARKET TYPE</div>
              <div class="market-type-checkbox-wrapper" ng-repeat="market_type_checkbox in market_type_checkboxes">
                <div class="market-type-checkbox-container">
                  <div class="search-checkbox" ng-click="market_type_checkbox.checked = !market_type_checkbox.checked ; filterResults()">
                    <span ng-show="market_type_checkbox.checked"><i class="fa fa-check"></i></span>
                  </div>
                  <span class="search-checkbox-text" ng-class="{'search-checkbox-text-selected' : market_type_checkbox.checked}" ng-click="market_type_checkbox.checked = !market_type_checkbox.checked ; filterResults()">{{market_type_checkbox.name}}</span>
                </div>
              </div>
            </div>
          </div>
          <div class="separate-line"></div>
          <div class="top-panel-property-type">
            <div class="top-panel-market-type-container">
              <div class="top-panel-section-title property">PROPERTY TYPE</div>
              <div class="propery-type-checkbox-wrapper">
                <div class="propery-type-checkbox-container" ng-repeat="property_type_checkbox in property_type_checkboxes">
                  <div class="search-checkbox" ng-click="property_type_checkbox.checked = !property_type_checkbox.checked ; filterResults()">
                    <span ng-show="property_type_checkbox.checked"><i class="fa fa-check"></i></span>
                  </div>
                  <span class="search-checkbox-text" ng-class="{'search-checkbox-text-selected' : property_type_checkbox.checked}" ng-click="property_type_checkbox.checked = !property_type_checkbox.checked ; filterResults()">{{property_type_checkbox.name}}</span>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="google-map-container">
    
    <!-- <div id="type-selector" class="controls">
      <input type="radio" name="type" id="changetype-all" checked="checked">
      <label for="changetype-all">All</label>

      <input type="radio" name="type" id="changetype-establishment">
      <label for="changetype-establishment">Establishments</label>

      <input type="radio" name="type" id="changetype-address">
      <label for="changetype-address">Addresses</label>

      <input type="radio" name="type" id="changetype-geocode">
      <label for="changetype-geocode">Geocodes</label>
    </div> -->
          <div id="map" style="width: 100%; height: 100%"></div>
        </div>
      </div>
      <div class="right-panel-wrapper">
        <div class="search-results-right-panel-container">
          <div class="search-results-right-panel-wrapper">
            <div class="sort-by-title">SORT BY</div>
            <div class="sort-drop-down-container" ng-click="show_sort_dropdown_show = !show_sort_dropdown_show">
              <div class="sort-drop-down">{{sort_option}}</div>
              <div class="sort-arrow-down"></div>
            </div>
            <div class="sort-dropdown-list-container" ng-show="show_sort_dropdown_show">
              <div class="sort-dropdown-list" ng-repeat="sort_option in sort_options_list" ng-click="sortResult(sort_option)">
                <div class="sort-option">{{sort_option}}</div>
              </div>
            </div>
            <div class="search-results-data">
            <div ng-repeat='asset in assets_results'>
            <assets-results asset='asset' id='myCarousel' ng-click='toggleObject($index)' ng-class='{ chosen: chosenAsset === asset }'></assets-results>
            </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  </section>

</div>

<script>
// This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
      function ConvertDMSToDD(degrees, minutes, seconds, direction) {
    var dd = Number(degrees) + Number(minutes)/60 + Number(seconds)/(60*60);
    if (direction == "S" || direction == "W") { dd = dd * -1; }
    return dd;
      }

      function ParseDMS(input) {
          var parts = input.split(/[^\d\w]+/);
          var lat = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[3]);
          var lng = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);
          return [lat, lng];
      }

// console.log(ParseDMS("36째57'9' N 110째4'21' W"))
console.log('ass= ', ParseDMS("49째26'25.4' N 7째41'31.3' E"))

      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 2
        });
        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
        var marker2 = new google.maps.Marker({
            position: myLatlng,
            title:"Zvi"
        });
        marker2.setMap(map);
                var myLatlng = new google.maps.LatLng(25.363882,11.044922);
        var marker3 = new google.maps.Marker({
            position: myLatlng,
            title:"Zvi"
        });
        marker3.setMap(map);
                var myLatlng = new google.maps.LatLng(-5.363882,151.044922);
        var marker4 = new google.maps.Marker({
            position: myLatlng,
            title:"Zvi"
        });
        marker4.setMap(map);
        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map,
          anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            // User entered the name of a Place that was not suggested and
            // pressed the Enter key, or the Place Details request failed.
            window.alert("No details available for input: '" + place.name + "'");
            return;
          }

          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }
          marker.setIcon(/** @type {google.maps.Icon} */({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
          }));
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
          infowindow.open(map, marker);
          
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        // function setupClickListener(id, types) {
        //   var radioButton = document.getElementById(id);
        //   radioButton.addEventListener('click', function() {
        //     autocomplete.setTypes(types);
        //   });
        // // }

        // setupClickListener('changetype-all', []);
        // setupClickListener('changetype-address', ['address']);
        // setupClickListener('changetype-establishment', ['establishment']);
        // setupClickListener('changetype-geocode', ['geocode']);
      }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBqoHgS5h-v08X3-YRRQvPQ4lU21b5Dqkw&libraries=places&callback=initMap"
async defer></script>