<div ng-controller='SearchController' ng-init='init()' ng-class='{"hebrew": localizationSrv.locale === "he"}'>
  <header>
    <div class='header-wrap dashboard'>
      <ul class='left-side'>
        <li><a href='#/'><%= image_tag('lndmrk_logo.png',class: 'header-logo', width: '133', alt: 'LNDMRK') %></a></li> 
        <li><a class='link-1' translate>how_it_works</a></li>
        <li><a class='link-2' translate>about</a></li>
        <li><a class='link-3' translate>learning</a></li>
      </ul>
      <ul class='right-side'>
        <li><a class='notification'></a></li>
        <li>
          <a class='user-image'></a>
        </li>
        <li><a class='user' href='#'>USER@LNDMRK.COM</a></li>
        <li class='logout'><a class='link' translate>logout</a></li>
      </ul>
    </div>
  </header>
  <section class="main-wrapper">
    <div class="data-container">
      <div class="left-panel-wrapper">
        <div class="search-top-panel-container">
          <div class="top-panel-search-properties">
            <div class="top-panel-search-properties-container">
              <div class="top-panel-section-title search">SEARCH PROPERTIES</div>
              <div class="properties-buttons-wrapper">
                <div class="properties-button left" ng-class="{'properties-button-left-selected' : investment_type_buttons[0].checked}" ng-click="investment_type_buttons[0].checked = !investment_type_buttons[0].checked ; filterResults()">INCOME</div>
                <div class="properties-button middle" ng-class="{'properties-button-middle-selected' : investment_type_buttons[1].checked}" ng-click="investment_type_buttons[1].checked = !investment_type_buttons[1].checked ; filterResults()">GROWTH</div>
                <div class="properties-button right" ng-class="{'properties-button-right-selected' : investment_type_buttons[2].checked}" ng-click="investment_type_buttons[2].checked = !investment_type_buttons[2].checked ; filterResults()">INCOME & GROWTH</div>
              </div>
              <div id="locationField" class="locationField">
                <input class="autocomplete" id="autocomplete" placeholder="Enter your address"
                       type="text" ng-model='address_autocomplete' ng-change="deleteZipErrorMessage()"
                       ng-class="{'error': invitationDataManagerService.zip_code_error || invitationDataManagerService.address_error}"></input>
              </div>
            </div>
          </div>
          <div class="separate-line"></div>
          <div class="top-panel-market-type">
            <div class="top-panel-market-type-container">
              <div class="top-panel-section-title market">MARKET TYPE</div>
              <div class="market-type-checkbox-wrapper" ng-repeat="market_type_checkbox in market_type_checkboxes">
                <div class="market-type-checkbox-container">
                  <div class="search-checkbox" ng-click="market_type_checkbox.checked = !market_type_checkbox.checked ; filterResults()">
                    <span ng-show="market_type_checkbox.checked"><i class="fa fa-check"></i></span>
                  </div>
                  <span class="search-checkbox-text" ng-class="{'search-checkbox-text-selected' : market_type_checkbox.checked}" ng-click="market_type_checkbox.checked = !market_type_checkbox.checked ; filterResults()">{{market_type_checkbox.name}}</span>
                </div>
              </div>
            </div>
          </div>
          <div class="separate-line"></div>
          <div class="top-panel-property-type">
            <div class="top-panel-market-type-container">
              <div class="top-panel-section-title property">PROPERTY TYPE</div>
              <div class="propery-type-checkbox-wrapper">
                <div class="propery-type-checkbox-container" ng-repeat="property_type_checkbox in property_type_checkboxes">
                  <div class="search-checkbox" ng-click="property_type_checkbox.checked = !property_type_checkbox.checked ; filterResults()">
                    <span ng-show="property_type_checkbox.checked"><i class="fa fa-check"></i></span>
                  </div>
                  <span class="search-checkbox-text" ng-class="{'search-checkbox-text-selected' : property_type_checkbox.checked}" ng-click="property_type_checkbox.checked = !property_type_checkbox.checked ; filterResults()">{{property_type_checkbox.name}}</span>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="google-map-container">
          google maps
        </div>
      </div>
      <div class="right-panel-wrapper">
        <div class="search-results-right-panel-container">
          <div class="search-results-right-panel-wrapper">
            <div class="sort-by-title">SORT BY</div>
            <div class="sort-drop-down-container" ng-click="show_sort_dropdown_show = !show_sort_dropdown_show">
              <div class="sort-drop-down">{{sort_option}}</div>
              <div class="sort-arrow-down"></div>
            </div>
            <div class="sort-dropdown-list-container" ng-show="show_sort_dropdown_show">
              <div class="sort-dropdown-list" ng-repeat="sort_option in sort_options_list" ng-click="sortResult(sort_option)">
                <div class="sort-option">{{sort_option}}</div>
              </div>
            </div>
            <div class="search-results-data">
            <div ng-repeat='asset in assets_results'>
            <assets-results asset='asset' id='myCarousel' ng-click='toggleObject($index)' ng-class='{ chosen: chosenAsset === asset }'></assets-results>
            </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  </section>

</div>

<script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        {types: ['geocode'],
        }); // only US addresses

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.

    autocomplete.addListener('place_changed', window.fillInAddress);
    var input_autocomplete = document.getElementById('autocomplete');
  }

  window.fillInAddress = function() {
    // $('.pac-container').remove();
    // Get the place details from the autocomplete object.
    var place;
    if (window.place !== null) {
      place = window.place;
    } else {
      place = autocomplete.getPlace();
      window.place = place;
    }
    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }

  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY']%>&libraries=places&callback=initAutocomplete"
async defer></script>